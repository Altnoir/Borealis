#priority 600
import mods.dropt.Dropt;
import mods.dropt.Rule;
import mods.dropt.Drop;
import mods.dropt.RuleList;
//粗铜
Dropt.list("ore_copper")
  .add(Dropt.rule()
    .matchBlocks(["thermalfoundation:ore"])
    .replaceStrategy("REPLACE_ALL_IF_SELECTED")
    .addDrop(Dropt.drop()
        .items([<contenttweaker:raw_copper>], Dropt.range(2, 5))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(10), "ANY", 1)
        .items([<contenttweaker:raw_copper>], Dropt.range(2, 10))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(100), "ANY", 2)
        .items([<contenttweaker:raw_copper>], Dropt.range(2, 15))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1000), "ANY", 3)
        .items([<contenttweaker:raw_copper>], Dropt.range(2, 20))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1048576), "REQUIRED")
        .items([<thermalfoundation:ore>])
    )
);
//粗铁
Dropt.list("ore_iron")
  .add(Dropt.rule()
    .matchBlocks(["minecraft:iron_ore"])
    .replaceStrategy("REPLACE_ALL_IF_SELECTED")
    .addDrop(Dropt.drop()
        .items([<contenttweaker:raw_iron>], Dropt.range(1, 1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(10), "ANY", 1)
        .items([<contenttweaker:raw_iron>], Dropt.range(1, 2))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(100), "ANY", 2)
        .items([<contenttweaker:raw_iron>], Dropt.range(1, 3))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1000), "ANY", 3)
        .items([<contenttweaker:raw_iron>], Dropt.range(1, 4))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1048576), "REQUIRED")
        .items([<minecraft:iron_ore>])
    )
);
//粗金
Dropt.list("ore_gold")
  .add(Dropt.rule()
    .matchBlocks(["minecraft:gold_ore"])
    .replaceStrategy("REPLACE_ALL_IF_SELECTED")
    .addDrop(Dropt.drop()
        .items([<contenttweaker:raw_gold>], Dropt.range(1, 1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(10), "ANY", 1)
        .items([<contenttweaker:raw_gold>], Dropt.range(1, 2))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(100), "ANY", 2)
        .items([<contenttweaker:raw_gold>], Dropt.range(1, 3))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1000), "ANY", 3)
        .items([<contenttweaker:raw_gold>], Dropt.range(1, 4))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1048576), "REQUIRED")
        .items([<minecraft:gold_ore>])
    )
);
//粗锡
Dropt.list("ore_tin")
  .add(Dropt.rule()
    .matchBlocks(["thermalfoundation:ore:1"])
    .replaceStrategy("REPLACE_ALL_IF_SELECTED")
    .addDrop(Dropt.drop()
        .items([<contenttweaker:raw_tin>], Dropt.range(1, 1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(10), "ANY", 1)
        .items([<contenttweaker:raw_tin>], Dropt.range(1, 2))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(100), "ANY", 2)
        .items([<contenttweaker:raw_tin>], Dropt.range(1, 3))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1000), "ANY", 3)
        .items([<contenttweaker:raw_tin>], Dropt.range(1, 4))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1048576), "REQUIRED")
        .items([<thermalfoundation:ore:1>])
    )
);
//粗银
Dropt.list("ore_silver")
  .add(Dropt.rule()
    .matchBlocks(["thermalfoundation:ore:2"])
    .replaceStrategy("REPLACE_ALL_IF_SELECTED")
    .addDrop(Dropt.drop()
        .items([<contenttweaker:raw_silver>], Dropt.range(1, 1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(10), "ANY", 1)
        .items([<contenttweaker:raw_silver>], Dropt.range(1, 2))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(100), "ANY", 2)
        .items([<contenttweaker:raw_silver>], Dropt.range(1, 3))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1000), "ANY", 3)
        .items([<contenttweaker:raw_silver>], Dropt.range(1, 4))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1048576), "REQUIRED")
        .items([<thermalfoundation:ore:2>])
    )
);
//粗铅
Dropt.list("ore_lead")
  .add(Dropt.rule()
    .matchBlocks(["thermalfoundation:ore:3"])
    .replaceStrategy("REPLACE_ALL_IF_SELECTED")
    .addDrop(Dropt.drop()
        .items([<contenttweaker:raw_lead>], Dropt.range(1, 1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(10), "ANY", 1)
        .items([<contenttweaker:raw_lead>], Dropt.range(1, 2))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(100), "ANY", 2)
        .items([<contenttweaker:raw_lead>], Dropt.range(1, 3))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1000), "ANY", 3)
        .items([<contenttweaker:raw_lead>], Dropt.range(1, 4))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1048576), "REQUIRED")
        .items([<thermalfoundation:ore:3>])
    )
);
//粗铅
Dropt.list("ore_nickel")
  .add(Dropt.rule()
    .matchBlocks(["thermalfoundation:ore:5"])
    .replaceStrategy("REPLACE_ALL_IF_SELECTED")
    .addDrop(Dropt.drop()
        .items([<contenttweaker:raw_nickel>], Dropt.range(1, 1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(10), "ANY", 1)
        .items([<contenttweaker:raw_nickel>], Dropt.range(1, 2))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(100), "ANY", 2)
        .items([<contenttweaker:raw_nickel>], Dropt.range(1, 3))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1000), "ANY", 3)
        .items([<contenttweaker:raw_nickel>], Dropt.range(1, 4))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1048576), "REQUIRED")
        .items([<thermalfoundation:ore:5>])
    )
);